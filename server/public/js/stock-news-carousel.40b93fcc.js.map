{"version":3,"sources":["webpack:///./src/components/StockNewsCarousel.vue?5743","webpack:///./src/components/StockNewsCarousel.vue","webpack:///./src/components/StockNewsCarousel.vue?2cc7"],"names":["data","carouselData","indicators","VueCarousel","components","name","props","stockSymbol","type","String","required","date","Date","default","numberOfArticles","Number","stocks","watch","handler","newSymbol","this","includes","stock","symbol","fetchArticles","immediate","computed","selectedStockArticles","selectedStock","find","articles","length","map","article","urlToImage","title","DOMParser","parseFromString","description","body","innerHTML","url","source","methods","fetch","toISOString","split","then","response","json","slice","push","render"],"mappings":"uHAAA,W,8LCCE,yBAAsE,GAAvDA,KAAM,EAAAC,aAAeC,YAAY,G,2KAK5CC,EAAc,mCAAqB,kBACvC,iDAEa,GACbC,WAAY,CACVD,eAEFE,KAAM,sBACNC,MAAO,CACLC,YAAa,CACXC,KAAMC,OACNC,UAAU,GAEZC,KAAM,CACJH,KAAMI,KACNC,QAAS,kBAAM,IAAID,OAErBE,iBAAkB,CAChBN,KAAMO,OACNF,QAAS,IAGbb,KAnBa,WAoBX,MAAO,CACLgB,OAAQ,KAGZC,MAAO,CACLV,YAAa,CACXW,QADW,SACHC,GACFC,KAAKJ,OAAOK,UAAS,SAACC,GAAD,OAAWA,EAAMC,SAAWJ,MACrDC,KAAKI,iBAEPC,WAAW,IAGfC,SAAU,CACRC,sBADQ,WACgB,WAClBC,EAAgBR,KAAKJ,OAAOa,MAC9B,SAACP,GAAD,OAAWA,EAAMC,SAAW,EAAKhB,eAEnC,OAAKqB,EACEA,EAAcE,SADM,IAG7B7B,aARQ,WAQO,WACb,OAA0C,IAAtCmB,KAAKO,sBAAsBI,OACtB,sGAGFX,KAAKO,sBAAsBK,KAAI,SAACC,GACrC,yEAGUA,EAAQC,WAAR,yDACsDD,EAAQC,WAD9D,8BAHV,iGAQqCD,EAAQE,MAR7C,gFAUc,EAAK5B,YAVnB,4DAac,IAAI6B,WAAYC,gBACdJ,EAAQK,YACR,aACAC,KAAKC,UAhBrB,8CAkBuBP,EAAQQ,IAlB/B,+BAmBER,EAAQS,OAnBV,mEA2BNC,QAAS,CACPnB,cADO,WACS,WACdoB,MAAM,cAAD,OACWxB,KAAKb,YADhB,iBACoCa,KAAKT,KAAKkC,cAAcC,MAAM,KAAK,KAEzEC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,IAAInB,EAAWmB,EAAKnB,SACjBoB,MAAM,EAAG,EAAKpC,kBACdkB,KAAI,SAACC,GACJ,MAAO,CACLS,OAAQT,EAAQS,OAAOrC,KACvB8B,MAAOF,EAAQE,MACfG,YAAaL,EAAQK,YACrBG,IAAKR,EAAQQ,IACbP,WAAYD,EAAQC,eAG1B,EAAKlB,OAAOmC,KAAK,CACf5B,OAAQ,EAAKhB,YACbuB,SAAUA,U,UClGtB,EAAOsB,OAASA,EAED","file":"js/stock-news-carousel.40b93fcc.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./StockNewsCarousel.vue?vue&type=style&index=0&id=3069e7ac&scope=true&lang=css\"","<template>\n  <vue-carousel :data=\"carouselData\" :indicators=\"false\"></vue-carousel>\n</template>\n\n<script>\nimport { defineAsyncComponent } from \"vue\";\nconst VueCarousel = defineAsyncComponent(() =>\n  import(/* webpackChunkName: \"vue-carousel\" */ \"@chenfengyuan/vue-carousel\")\n);\nexport default {\n  components: {\n    VueCarousel,\n  },\n  name: \"stock-news-carousel\",\n  props: {\n    stockSymbol: {\n      type: String,\n      required: true,\n    },\n    date: {\n      type: Date,\n      default: () => new Date(),\n    },\n    numberOfArticles: {\n      type: Number,\n      default: 5,\n    },\n  },\n  data() {\n    return {\n      stocks: [],\n    };\n  },\n  watch: {\n    stockSymbol: {\n      handler(newSymbol) {\n        if (this.stocks.includes((stock) => stock.symbol === newSymbol)) return;\n        this.fetchArticles();\n      },\n      immediate: true,\n    },\n  },\n  computed: {\n    selectedStockArticles() {\n      let selectedStock = this.stocks.find(\n        (stock) => stock.symbol === this.stockSymbol\n      );\n      if (!selectedStock) return [];\n      return selectedStock.articles;\n    },\n    carouselData() {\n      if (this.selectedStockArticles.length === 0)\n        return [\n          /*html*/ `<div class=\"card\"><div class=\"card-body\"><p class=\"card-text\">No news to display.</p></div></div>`,\n        ];\n      return this.selectedStockArticles.map((article) => {\n        return /*html*/ ` \n            <div class=\"slide card\">\n                ${\n                  article.urlToImage\n                    ? `<img class=\"card-img-top overflow-hidden\" src=\"${article.urlToImage}\" alt=\"Card image cap\">`\n                    : ``\n                }\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">${article.title}</h5>\n                    <h6 class=\"card-subtitle mb-2 text-muted\">${\n                      this.stockSymbol\n                    }</h6>\n                    <p class=\"card-text\">${\n                      new DOMParser().parseFromString(\n                        article.description,\n                        \"text/html\"\n                      ).body.innerHTML\n                    }</p>\n                    <a href=\"${article.url}\" class=\"card-link\">${\n          article.source\n        }</a>\n                </div>\n            </div>\n        `;\n      });\n    },\n  },\n  methods: {\n    fetchArticles() {\n      fetch(\n        `api/news?q=${this.stockSymbol}&from=${this.date.toISOString().split(\"T\")[0]}`\n      )\n        .then((response) => response.json())\n        .then((json) => {\n          let articles = json.articles\n            .slice(0, this.numberOfArticles)\n            .map((article) => {\n              return {\n                source: article.source.name,\n                title: article.title,\n                description: article.description,\n                url: article.url,\n                urlToImage: article.urlToImage,\n              };\n            });\n          this.stocks.push({\n            symbol: this.stockSymbol,\n            articles: articles,\n          });\n        });\n    },\n  },\n};\n</script>\n\n<style scope>\n.slide {\n  height: 40rem;\n}\n</style>\n","import { render } from \"./StockNewsCarousel.vue?vue&type=template&id=3069e7ac\"\nimport script from \"./StockNewsCarousel.vue?vue&type=script&lang=js\"\nexport * from \"./StockNewsCarousel.vue?vue&type=script&lang=js\"\n\nimport \"./StockNewsCarousel.vue?vue&type=style&index=0&id=3069e7ac&scope=true&lang=css\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}